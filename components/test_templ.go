// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Test() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"main-container\" style=\"\"><div class=\"top-buttons-sm d-flex d-md-none p-3 position-absolute top-0 start-0\"><a href=\"\" class=\"btn btn-sm text-white active me-2\" aria-current=\"page\">Before</a> <a class=\"btn btn-sm text-white \">After</a></div><div class=\"background-content\"><div class=\"left-content project-display-area d-none d-md-block\"></div><div class=\"right-media d-none d-md-block\"><div class=\"media-item mb-3\"><img src=\"\" alt=\"Before Image Spotlight\" class=\"img-fluid rounded shadow\"></div><div class=\"media-item\"><div class=\"embed-responsive embed-responsive-16by9 rounded shadow\"><iframe class=\"embed-responsive-item\" src=\"\" allowfullscreen></iframe></div></div></div></div><div class=\"right-media-sm-bottom d-block d-md-none text-center p-3 fixed-bottom\"><div class=\"d-flex justify-content-center mb-2\"><button class=\"btn btn-custom rounded-pill text-white me-2\">Photos</button> <button class=\"btn btn-custom rounded-pill text-white ms-2\">Photos</button></div></div><div class=\"button-container-after d-none d-md-flex justify-content-between align-items-center\"><div class=\"button-group d-flex\"><a href=\"\" class=\"btn btn-before btn-lg active me-3\" aria-current=\"page\">Before</a> <a href=\"\" class=\"btn btn-after btn-lg \">After</a></div><div class=\"right-bottom-elements\"><a href=\"\" class=\"btn btn-lg text-white\">Videos Of Projects</a></div></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<!--Our story--><div class=\"container py-5\"><div class=\"row mb-4\"><div class=\"col-12 col-md-12\"><h1 class=\"fw-bold mb-3\"></h1><p class=\"text-dark\"></p></div></div><div class=\"d-flex justify-content-end mb-2\"><img src=\"/static/images/sprade-green.png\" alt=\"Small Progress Image\" class=\"img-fluid rounded\" style=\"width: 50px; height: auto;\"></div><div class=\"row\"><div class=\"col-12 col-md-12\"><div class=\"d-flex flex-column mb-3\"><p class=\"fw-small mb-2\">Estimated progress cost</p><h3 class=\"fw-bold mb-2\"></h3></div><div><div class=\"d-flex flex-column mb-3\"><h3 class=\"fw-bold mb-2\">Campaign progress</h3><h3 class=\"fw-bold mb-2\"></h3><p></p><div class=\"d-flex justify-content-end align-items-center mb-1\"><div class=\"text-center\"><h3 class=\"fw-bold mb-0\">15%</h3><p class=\"mb-0\">of Goal</p></div></div></div><div class=\"progress mb-4\" style=\"height: 10px;\"><div class=\"progress-bar\" role=\"progressbar\" style=\"width: 15%;\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div></div></div><div class=\"text-center\"><a href=\"#\" class=\"btn btn-custom-donate btn-lg w-100\">Donate</a></div></div></div></div><!--our story end--><!--ongoing project starts--><div class=\"container my-5\"><h2 class=\"card-header fw-bold mb-4\">Ongoing Projects</h2><div class=\"row g-4 mb-4\"><div class=\"col-12 col-md-6\"><div class=\"card h-100\"><img src=\"images/shape.png\" class=\"card-img-top\" alt=\"Card Image 1\"><div class=\"card-body d-flex flex-column\"><h2 class=\"card-title h5 fw-bold\">Mama Adanne Renovate</h2><p class=\"card-text text-small\">For over Two Decades, This House Stood As More Than Just Bricks And Mortar- it's Been A Shelter, A place of Laughter, Prayer, And Quiet Endurance.....</p><p class=\"card-text small mb-2\"><strong>12 June 2025</strong></p><div class=\"mt-auto\"><div class=\"progress mb-2\"><div class=\"progress-bar\" role=\"progressbar\" style=\"width: 20%;\" aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div></div><p class=\"card-text fw-bold text-start\">N200,000 out of N10,000,000</p></div></div></div></div></div></div><!--ongoing project end--><!--completed projects starts--><div class=\"container my-5\"><h2 class=\"card-header fw-bold mb-4\">Completed Projects</h2><div class=\"row g-4 mb-4\"><div class=\"col-12 col-md-6\"><div class=\"card h-100\"><img src=\"images/shape.png\" class=\"card-img-top\" alt=\"Card Image 1\"><div class=\"card-body d-flex flex-column\"><h2 class=\"card-title h5 fw-bold\">Mama Adanne Renovate</h2><p class=\"card-text text-small\">For over Two Decades, This House Stood As More Than Just Bricks And Mortar- it's Been A Shelter, A place of Laughter, Prayer, And Quiet Endurance.....</p></div></div></div></div></div><!--completed projects ends--><script>\n// --- Dynamic Project List, Banner, and Details Population for test.templ ---\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    let currentProjectId = null;\n    let allProjects = [];\n    let projectSections = {};\n\n    // DOM Elements\n    const mainContainer = document.querySelector('.main-container');\n    const bannerImg = document.querySelector('.right-media .media-item img');\n    const iframe = document.querySelector('.right-media .media-item + .media-item iframe');\n    const ongoingContainer = document.querySelectorAll('.container.my-5 .row.g-4.mb-4')[0];\n    const completedContainer = document.querySelectorAll('.container.my-5 .row.g-4.mb-4')[1];\n    const storyTitle = document.querySelector('.container.py-5 h1');\n    const storyBody = document.querySelector('.container.py-5 p.text-dark');\n    const estCost = document.querySelector('.container.py-5 .fw-bold.mb-2');\n    const progressNow = document.querySelectorAll('.container.py-5 .fw-bold.mb-2')[1];\n    const progressText = document.querySelector('.container.py-5 p.mb-0');\n    const progressBar = document.querySelector('.container.py-5 .progress-bar');\n    const beforeBtn = document.querySelector('.btn-before');\n    const afterBtn = document.querySelector('.btn-after');\n    const topBtns = document.querySelectorAll('.top-buttons-sm .btn');\n    const videoBtn = document.querySelector('.right-bottom-elements a.btn-lg');\n\n    // --- Fetch all projects ---\n    async function fetchProjects() {\n        const res = await fetch('/api/projects');\n        const data = await res.json();\n        return data.projects || [];\n    }\n\n    // --- Fetch project sections and images ---\n    async function fetchProjectSections(projectId) {\n        const [before, after, images] = await Promise.all([\n            fetch(`/api/projects/${projectId}/before`).then(r=>r.ok?r.json():{}).then(d=>d.project_before||null),\n            fetch(`/api/projects/${projectId}/after`).then(r=>r.ok?r.json():{}).then(d=>d.project_after||null),\n            fetch(`/api/projects/${projectId}/images`).then(r=>r.ok?r.json():{}).then(d=>d.images||[])\n        ]);\n        return { before, after, images };\n    }\n\n    // --- Render project cards ---\n    function renderProjectCards(list, container, type) {\n        container.innerHTML = '';\n        list.forEach(project => {\n            const sec = projectSections[project.id] || {};\n            const before = sec.before || {};\n            const est = before.estimated_target || 1;\n            const cur = before.current_funds || 0;\n            const percent = Math.round((cur/est)*100);\n            const date = project.created_at ? new Date(project.created_at).toLocaleDateString() : '';\n            const card = document.createElement('div');\n            card.className = 'col-12 col-md-6';\n            card.innerHTML = `\n                <div class=\"card h-100 project-card\" data-id=\"${project.id}\">\n                    <img src=\"${(sec.images||[]).find(i=>i.phase==='before')?.image_link || 'images/shape.png'}\" class=\"card-img-top\" alt=\"Card Image\">\n                    <div class=\"card-body d-flex flex-column\">\n                        <h2 class=\"card-title h5 fw-bold project-title\" style=\"cursor:pointer\" data-id=\"${project.id}\">${project.name}</h2>\n                        <p class=\"card-text text-small\">${before.body ? before.body.substring(0, 120) + '...' : ''}</p>\n                        <p class=\"card-text small mb-2\"><strong>${date}</strong></p>\n                        <div class=\"mt-auto\">\n                            <div class=\"progress mb-2\">\n                                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: ${percent}%;\"\n                                    aria-valuenow=\"${percent}\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                            <p class=\"card-text fw-bold text-start\">N${cur.toLocaleString()} out of N${est.toLocaleString()}</p>\n                        </div>\n                    </div>\n                </div>\n            `;\n            container.appendChild(card);\n        });\n    }\n\n    // --- Render completed project cards ---\n    function renderCompletedCards(list, container) {\n        container.innerHTML = '';\n        list.forEach(project => {\n            const sec = projectSections[project.id] || {};\n            const before = sec.before || {};\n            const card = document.createElement('div');\n            card.className = 'col-12 col-md-6';\n            card.innerHTML = `\n                <div class=\"card h-100 project-card\" data-id=\"${project.id}\">\n                    <img src=\"${(sec.images||[]).find(i=>i.phase==='after')?.image_link || 'images/shape.png'}\" class=\"card-img-top\" alt=\"Card Image\">\n                    <div class=\"card-body d-flex flex-column\">\n                        <h2 class=\"card-title h5 fw-bold project-title\" style=\"cursor:pointer\" data-id=\"${project.id}\">${project.name}</h2>\n                        <p class=\"card-text text-small\">${before.body ? before.body.substring(0, 120) + '...' : ''}</p>\n                    </div>\n                </div>\n            `;\n            container.appendChild(card);\n        });\n    }\n\n    // --- Render project details in \"Our Story\" and banner ---\n    function renderProjectDetails(projectId) {\n        const sec = projectSections[projectId];\n        if (!sec) return;\n        const before = sec.before || {};\n        const after = sec.after || {};\n        const images = sec.images || [];\n        // Our Story\n        storyTitle.textContent = allProjects.find(p=>p.id===projectId)?.name || '';\n        storyBody.textContent = before.body || '';\n        estCost.textContent = \"N\" + (before.estimated_target || 0).toLocaleString();\n        progressNow.textContent = `${\"N\" + (before.current_funds || 0).toLocaleString()} Funded`;\n        const percent = before.estimated_target ? Math.round((before.current_funds/before.estimated_target)*100) : 0;\n        progressText.textContent = `of N${(before.estimated_target||0).toLocaleString()} Funded`;\n        progressBar.style.width = percent + \"%\";\n        progressBar.setAttribute('aria-valuenow', percent);\n        progressBar.textContent = '';\n        // Banner\n        let phase = beforeBtn.classList.contains('active') ? 'before' : 'after';\n        renderBannerImages(images, phase);\n        renderBannerVideo(phase, before, after);\n        // Video link for \"Videos Of Projects\"\n        let videoLink = (phase === 'before' ? before.video_link : after.video_link);\n        videoBtn.onclick = (e) => {\n            e.preventDefault();\n            if (videoLink) {\n                let url = typeof videoLink === 'object' ? (videoLink.String || videoLink.string) : videoLink;\n                window.open(url, '_blank');\n            }\n        };\n    }\n\n    // --- Render banner images and thumbnails ---\n    function renderBannerImages(images, phase) {\n        // Filter images by phase\n        const imgs = images.filter(i => i.phase === phase);\n        // Set main background image\n        if (imgs.length > 0) {\n            mainContainer.style.setProperty('--page-background-image', `url('${imgs[0].image_link}')`);\n        } else {\n            mainContainer.style.setProperty('--page-background-image', `url('images/Container%20(3).png')`);\n        }\n        // Show other images (if any) in .right-media .media-item img\n        if (imgs.length > 1) {\n            bannerImg.src = imgs[1].image_link;\n        } else if (imgs.length === 1) {\n            bannerImg.src = imgs[0].image_link;\n        } else {\n            bannerImg.src = 'images/Slide 1 (1).png';\n        }\n    }\n\n    // --- Render video in banner ---\n    function renderBannerVideo(phase, before, after) {\n        let videoLink = (phase === 'before' ? before.video_link : after.video_link);\n        let url = '';\n        if (videoLink) {\n            url = typeof videoLink === 'object' ? (videoLink.String || videoLink.string) : videoLink;\n        }\n        if (iframe) {\n            if (url && url.includes('youtube.com')) {\n                let embedUrl = url;\n                if (url.includes('watch?v=')) {\n                    embedUrl = url.replace('watch?v=', 'embed/');\n                }\n                iframe.src = embedUrl;\n            } else if (url && url.includes('youtu.be/')) {\n                let vid = url.split('youtu.be/')[1];\n                iframe.src = 'https://www.youtube.com/embed/' + vid;\n            } else if (url) {\n                iframe.src = url;\n            } else {\n                iframe.src = '';\n            }\n        }\n    }\n\n    // --- Setup before/after toggle for both desktop and mobile ---\n    function setupToggle() {\n        function updatePhase(phase) {\n            if (!currentProjectId) return;\n            renderBannerImages(projectSections[currentProjectId].images, phase);\n            renderBannerVideo(phase, projectSections[currentProjectId].before, projectSections[currentProjectId].after);\n        }\n        if (beforeBtn && afterBtn) {\n            beforeBtn.addEventListener('click', (e) => {\n                e.preventDefault();\n                beforeBtn.classList.add('active');\n                afterBtn.classList.remove('active');\n                updatePhase('before');\n            });\n            afterBtn.addEventListener('click', (e) => {\n                e.preventDefault();\n                afterBtn.classList.add('active');\n                beforeBtn.classList.remove('active');\n                updatePhase('after');\n            });\n        }\n        topBtns.forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                topBtns.forEach(b => b.classList.remove('active'));\n                btn.classList.add('active');\n                const phase = btn.textContent.trim().toLowerCase();\n                updatePhase(phase);\n            });\n        });\n    }\n\n    // --- Bind project card click events ---\n    function bindProjectCardClicks() {\n        document.querySelectorAll('.project-title').forEach(el => {\n            el.onclick = (e) => {\n                const id = Number(el.getAttribute('data-id'));\n                if (id && projectSections[id]) {\n                    currentProjectId = id;\n                    renderProjectDetails(id);\n                }\n            };\n        });\n    }\n\n    // --- Initial load ---\n    allProjects = await fetchProjects();\n    for (const p of allProjects) {\n        projectSections[p.id] = await fetchProjectSections(p.id);\n    }\n    const ongoing = allProjects.filter(p => p.status === 'ongoing');\n    const completed = allProjects.filter(p => p.status === 'completed');\n    renderProjectCards(ongoing, ongoingContainer, 'ongoing');\n    renderCompletedCards(completed, completedContainer);\n    if (ongoing.length > 0) {\n        currentProjectId = ongoing[0].id;\n        renderProjectDetails(currentProjectId);\n    } else if (completed.length > 0) {\n        currentProjectId = completed[0].id;\n        renderProjectDetails(currentProjectId);\n    }\n    setupToggle();\n    bindProjectCardClicks();\n});\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
